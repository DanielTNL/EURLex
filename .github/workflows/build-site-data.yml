name: "EUR-Lex — Build site data"

on:
  workflow_dispatch: {}          # <<< gives you the 'Run workflow' button
  schedule:
    - cron: "10 6 * * *"         # daily 06:10 UTC
  push:
    branches: [ main ]
    paths:
      - "reports/**"
      - "scripts/**"
      - "!docs/**"               # don't retrigger on our own data commit

permissions:
  contents: write

concurrency:
  group: build-site-data-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Build site data (posts.json + reports.json + audio.json)
        run: python scripts/build_site_data.py

      # Rebase-safe commit using your PAT (so workflow updates are allowed)
      - name: Commit & push data (via PAT)
        env:
          PAT_WORKFLOW: ${{ secrets.PAT_WORKFLOW }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail
      
          git config user.name  "automation"
          git config user.email "actions@users.noreply.github.com"
      
          # Stage only the generated artifacts (ignore everything else)
          git add docs/data/posts.json docs/data/reports.json docs/data/audio.json || true
      
          # If nothing changed, we're done
          if git diff --cached --quiet; then
            echo "No data changes to commit."
            exit 0
          fi
      
          # Make our index/HEAD sit on top of the latest remote main
          # --soft keeps our staged changes; no rebase conflict and no “dirty index” error.
          git fetch origin main
          git reset --soft origin/main
      
          # Ensure the three files are staged after the soft reset
          git add docs/data/posts.json docs/data/reports.json docs/data/audio.json
      
          git commit -m "Build site data $(date -u +%F)"
      
          # Push using your PAT (masked in logs)
          git remote set-url origin https://${PAT_WORKFLOW}@github.com/${REPO}.git
          git push origin HEAD:main
                # Use PAT for push (token is masked in logs)
                git remote set-url origin https://${PAT_WORKFLOW}@github.com/${REPO}.git
                git push origin HEAD:main
