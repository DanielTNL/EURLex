name: Weekly — EU Finance & Defence

on:
  schedule:
    # 12:00 UTC ≈ 14:00 Amsterdam (CEST), 13:00 (CET)
    - cron: '0 12 * * 5'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  weekly:
    runs-on: ubuntu-latest
    concurrency:
      group: eurlex-weekly
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show repository tree (debug)
        run: |
          echo "PWD: $(pwd)"
          ls -la
          echo
          echo "Weekly script candidates:"
          find . -maxdepth 2 -type f -name "weekly*.py" -print || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Run weekly synthesis
        shell: bash
        env:
          # --- OpenAI (robust mapping + safe defaults) ---
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: ${{ vars.OPENAI_MODEL_WEEKLY || vars.OPENAI_WEEKLY_MODEL || vars.OPENAI_MODEL || 'gpt-4o-mini' }}
          OPENAI_WEEKLY_MODEL: ${{ vars.OPENAI_MODEL_WEEKLY || vars.OPENAI_WEEKLY_MODEL || vars.OPENAI_MODEL || 'gpt-4o-mini' }}
          OPENAI_TTS_MODEL: ${{ vars.OPENAI_TTS_MODEL || 'gpt-4o-mini-tts' }}
          OPENAI_TTS_VOICE: ${{ vars.OPENAI_TTS_VOICE || 'alloy' }}

          # --- Gmail (optional failure mail) ---
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_PASS: ${{ secrets.GMAIL_PASS }}

          # --- Google OAuth (your Gmail) ---
          GOOGLE_OAUTH_CLIENT_ID:     ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
          GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
          GOOGLE_OAUTH_REFRESH_TOKEN: ${{ secrets.GOOGLE_OAUTH_REFRESH_TOKEN }}

          # --- Optional Drive routing/sharing ---
          GOOGLE_DOCS_FOLDER_ID:  ${{ secrets.GOOGLE_DOCS_FOLDER_ID }}
          GOOGLE_DOCS_SHARE_WITH: ${{ secrets.GOOGLE_DOCS_SHARE_WITH }}
        run: |
          set -euo pipefail
          if   [ -f "weekly_main.py" ]; then SCRIPT="weekly_main.py";
          elif [ -f "weekly.py"      ]; then SCRIPT="weekly.py";
          else
            echo "::error::No weekly script found at repo root (expected weekly_main.py or weekly.py)."
            ls -la
            exit 1
          fi
          echo "Running: $SCRIPT"
          echo "Using model: ${OPENAI_MODEL}"
          echo "Using TTS:   ${OPENAI_TTS_MODEL} / voice=${OPENAI_TTS_VOICE}"
          python "$SCRIPT"

      - name: Commit weekly outputs
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain reports)" ]; then
            git add reports
            git commit -m "Add weekly report $(date -u +%F)"
            git push
          else
            echo "No changes in reports/"
          fi

      - name: Notify on failure
        if: failure()
        env:
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_PASS: ${{ secrets.GMAIL_PASS }}
        run: |
          python - <<'PY'
          import os, smtplib
          from email.mime.text import MIMEText
          u,p = os.environ['GMAIL_USER'], os.environ['GMAIL_PASS']
          msg = MIMEText("Weekly EU Finance & Defence report failed. Check Actions logs.")
          msg['Subject']="Weekly Report – FAILED"
          msg['From']=u; msg['To']=u
          with smtplib.SMTP_SSL("smtp.gmail.com",465) as s:
              s.login(u,p); s.sendmail(u,[u],msg.as_string())
          PY
