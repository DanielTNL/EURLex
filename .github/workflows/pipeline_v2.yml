name: Pipeline v2 (manual)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  dryrun:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Install dependencies from root + scripts (+ workers if present), fail fast
      - name: Install deps (root + scripts + workers)
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip setuptools wheel

          echo "== requirements files present =="
          ls -1 requirements*.txt scripts/*.txt workers/*.txt 2>/dev/null || true

          for f in requirements.txt scripts/requirements.txt workers/requirements.txt; do
            if [ -f "$f" ]; then
              echo ">>> Checking $f for trailing-dot version pins"
              if grep -nE '==[0-9]+\.[0-9]+\.($|[^0-9])' "$f"; then
                echo "Invalid version specifier (trailing dot) in $f"; exit 1;
              fi
              echo ">>> Installing from $f"
              python -m pip install -r "$f"
            fi
          done

          python -m pip check

      - name: Weekly discover
        run: python workers/weekly_discover.py --window 7d --sources sources_v2.yaml --config config_v2.yaml

      - name: Process documents
        run: python workers/process_document.py --from state/latest_discovery.json --config config_v2.yaml

      - name: Build timeline
        run: python workers/build_timeline.py --window 7d --config config_v2.yaml

      - name: Show outputs (ls + head)
        run: |
          echo "== Directory tree =="
          ls -lah
          echo "== outputs/docs =="
          ls -lah outputs/docs || true
          for f in outputs/docs/*.ndjson; do
            echo "---- $f (first 3 lines) ----"
            head -n 3 "$f" || true
          done
          echo "== outputs/timelines =="
          ls -lah outputs/timelines || true
          for f in outputs/timelines/*.json; do
            echo "---- $f (first 40 lines) ----"
            head -n 40 "$f" || true
          done
          echo "== state =="
          ls -lah state || true

      - name: Upload data artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-v2-data
          path: |
            outputs/docs/*.ndjson
            outputs/timelines/*.json
            state/latest_discovery.json
          if-no-files-found: warn

      - name: Commit outputs back to repo (optional)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add outputs/docs outputs/timelines state/latest_discovery.json || true
          git commit -m "pipeline v2 data $(date -u +'%F %T') [manual]" || echo "No changes to commit"
          git push
